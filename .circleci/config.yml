version: 2
jobs:
  staging_api:
    docker:
      - image: circleci/python:3.6
    steps:
      - add_ssh_keys:
          fingerprints:
            - "94:a6:df:e0:d7:c5:92:55:dc:80:73:c2:29:67:18:7d"
      - run:
          name: Clone Operations Repository
          command: |
            cd ~/
            ssh-keyscan -t rsa bitbucket.org
            git clone git@bitbucket.org:colabcoop-ondemand/hvbp-operations.git operations
      - restore_cache:
          keys:
          - deps-{{ checksum "~/operations/ansible/api/requirements.txt" }}
      - run:
          name: Install PIP Dependencies
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r ~/operations/ansible/api/requirements.txt
      - save_cache:
          key: deps-{{ checksum "~/operations/ansible/api/requirements.txt" }}
          paths:
            - "env"
      - run:
          name: Setup Ansible Vault pass
          command: |
            echo $VAULT_PASS | tee ~/operations/ansible/api/.vault-pass
      - run:
          name: Deploy with Ansible
          command: |
            . env/bin/activate
            cd ~/operations/ansible/api
            ansible-playbook -i hosts deploy.yml --limit staging_* --vault-password-file ~/repo/server/ansible/.vault-pass
  production_api:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - deps-{{ checksum "~/repo/server/ansible/requirements.txt" }}
      - run:
          name: Install PIP Dependencies
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r ~/repo/server/ansible/requirements.txt
      - save_cache:
          key: deps-{{ checksum "~/repo/server/ansible/requirements.txt" }}
          paths:
            - "env"
      - run:
          name: Setup Ansible Vault pass
          command: |
            echo $VAULT_PASS | tee ~/repo/server/ansible/.vault-pass
      - run:
          name: Deploy API with Ansible
          command: |
            . env/bin/activate
            cd ~/repo/server/ansible
            ansible-playbook -i hosts deploy.yml --limit production_v1 --vault-password-file ~/repo/server/ansible/.vault-pass
  staging_admin:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - deps-{{ checksum "~/repo/client/ansible/requirements.txt" }}
      - run:
          name: Install PIP Dependencies
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r ~/repo/client/ansible/requirements.txt
      - save_cache:
          key: deps-{{ checksum "~/repo/client/ansible/requirements.txt" }}
          paths:
            - "env"
      - run:
          name: Setup Ansible Vault pass
          command: |
            echo $VAULT_PASS | tee ~/repo/client/ansible/.vault-pass
      - run:
          name: Deploy with Ansible
          command: |
            . env/bin/activate
            cd ~/repo/client/ansible
            ansible-playbook -i hosts deploy.yml --limit staging_v1 --vault-password-file ~/repo/client/ansible/.vault-pass
  production_admin:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
          - deps-{{ checksum "~/repo/client/ansible/requirements.txt" }}
      - run:
          name: Install PIP Dependencies
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r ~/repo/client/ansible/requirements.txt
      - save_cache:
          key: deps-{{ checksum "~/repo/client/ansible/requirements.txt" }}
          paths:
            - "env"
      - run:
          name: Setup Ansible Vault pass
          command: |
            echo $VAULT_PASS | tee ~/repo/client/ansible/.vault-pass
      - run:
          name: Deploy with Ansible
          command: |
            . env/bin/activate
            cd ~/repo/client/ansible
            ansible-playbook -i hosts deploy.yml --limit production_v1 --vault-password-file ~/repo/client/ansible/.vault-pass
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - staging_api:
          filters:
            branches:
              only: ambassador-stage
#      - production_api:
#          filters:
#            branches:
#              only: ambassador
#      - staging_admin:
#          filters:
#            branches:
#              only: ambassador-stage
#      - production_admin:
#          filters:
#            branches:
#              only: ambassador
