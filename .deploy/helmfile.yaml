releases:
  - name: hello-voter-api
    namespace: hello-voter
    chart: ./api
    values:
      - name: hello-voter-api
        issuer: "letsencrypt-prod"
        host: hello-voter-api.coopernetes.colab.coop
        image:
          tag: {{ requiredEnv "DOCKER_TAG_API" | quote }}
          port: 8080
          env:
            - name: NEO4J_PROTOCOL
              value: "bolt"
            - name: NEO4J_HOST
              value: "neo4j-db"
            - name: NEO4J_USERNAME
              value: "neo4j"
            - name: NEO4J_PASS
              value: {{ requiredEnv "NEO4J_PASSWORD" | quote }}
            - name: NEO4J_PASSWORD
              value: {{ requiredEnv "NEO4J_PASSWORD" | quote }}
            - name: NEO4J_PORT
              value: "7687"
            - name: NEO4J_DATABASE
              value: "neo4j"
            - name: JWT_AUD
              value: "blockpower.us"
            - name: TWILIO_ACCOUNT_SID
              value: {{ requiredEnv "TWILIO_ACCOUNT_SID" | quote }}
            - name: TWILIO_AUTH_TOKEN
              value: {{ requiredEnv "TWILIO_AUTH_TOKEN" | quote }}
            - name: TWILIO_FROM
              value: {{ requiredEnv "TWILIO_FROM" | quote }}
            - name: TRIPLER_CONFIRMATION_MESSAGE
              value: "Dear :0, reply Yes if you are happy"
  - name: hello-voter-db
    namespace: hello-voter
    chart: ./db
    values:
      - name: neo4j-db
        admin:
          host: hello-voter-db-admin.coopernetes.colab.coop
        image:
          # NOTE: I couldn' get the DB container to work. Unsure how to set up
          # a neo4j server according to their instructions, so just calling
          # the container from npm run database on the server for now.
          tag: ourvoiceusa/neo4j-hv
          env:
            - name: NEO4J_dbms_memory_pagecache_size
              value: "12G"
            - name:  NEO4J_dbms_memory_heap_initial__size
              value: "4G"
            - name: NEO4J_dbms_memory_heap_max__size
              value: "4G"
            - name: NEO4J_AUTH
              value: neo4j/{{ requiredEnv "NEO4J_PASSWORD" }}
